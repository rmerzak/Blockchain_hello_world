{"ast":null,"code":"var _jsxFileName = \"/Users/rmerzak/Desktop/Blockchain_hello_world/blockchain_hello_world/src/SimpleStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport SimpleStore_abi from './SimpleStore_abi.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleStore = () => {\n  _s();\n\n  const constactAdress = '0x7EF2e0048f5bAeDe046f6BF797943daF4ED8CB47';\n  const [rrorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setconnButtonText] = useState('Connect wallet');\n  const [currentContraVal, setCurrentContraVal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [Contract, setContract] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangeHandler(result[0]);\n        setconnButtonText('wallet connected');\n      });\n    } else {\n      setErrorMessage('Need to install Metamask');\n    }\n  };\n\n  const accountChangeHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(constactAdress, SimpleStore_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"get/set Interaction with contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Adress-color\",\n      children: [\"Address: \", defaultAccount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"get current value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), ErrorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleStore, \"YeKBGUpIDKjyEa3fwRHxV8v0eAU=\");\n\n_c = SimpleStore;\nexport default SimpleStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleStore\");","map":{"version":3,"sources":["/Users/rmerzak/Desktop/Blockchain_hello_world/blockchain_hello_world/src/SimpleStore.js"],"names":["React","useState","ethers","SimpleStore_abi","SimpleStore","constactAdress","rrorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setconnButtonText","currentContraVal","setCurrentContraVal","provider","setProvider","signer","setSigner","Contract","setContract","connectWalletHandler","window","ethereum","request","method","then","result","accountChangeHandler","newAccount","updateEthers","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","ErrorMessage"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAO,WAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,cAAc,GAAG,4CAAvB;AACA,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,gBAAD,CAApD;AAEA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACiB,QAAD,EAAUC,WAAV,IAAyBlB,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMmB,oBAAoB,GAAG,MAC7B;AACI,QAAIC,MAAM,CAACC,QAAX,EACA;AACID,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACZC,QAAAA,oBAAoB,CAACD,MAAM,CAAC,CAAD,CAAP,CAApB;AACAf,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACH,OAJD;AAKH,KAPD,MAQA;AACIJ,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACH;AACJ,GAbD;;AAeA,QAAMoB,oBAAoB,GAAIC,UAAD,IAAgB;AACzCnB,IAAAA,iBAAiB,CAACmB,UAAD,CAAjB;AACAC,IAAAA,YAAY;AACf,GAHD;;AAKA,QAAMA,YAAY,GAAG,MACrB;AACI,QAAIC,YAAY,GAAG,IAAI5B,MAAM,CAAC6B,SAAP,CAAiBC,YAArB,CAAkCX,MAAM,CAACC,QAAzC,CAAnB;AACAP,IAAAA,WAAW,CAACe,YAAD,CAAX;AAEA,QAAIG,UAAU,GAAGH,YAAY,CAACI,SAAb,EAAjB;AACAjB,IAAAA,SAAS,CAACgB,UAAD,CAAT;AACA,QAAIE,YAAY,GAAG,IAAIjC,MAAM,CAACgB,QAAX,CAAoBb,cAApB,EAAoCF,eAApC,EAAqD8B,UAArD,CAAnB;AACAd,IAAAA,WAAW,CAACgB,YAAD,CAAX;AAEH,GAVD;;AAWA,sBACI;AAAA,4BACI;AAAA,gBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEf,oBAAjB;AAAA,gBAAwCV;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,8BAAuCF,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKK4B,YALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApDD;;GAAMhC,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["\nimport React, {useState} from 'react'\nimport { ethers } from 'ethers';\nimport SimpleStore_abi from './SimpleStore_abi.json';\nimport './App.css';\n\nconst SimpleStore = () => {\n\n    const constactAdress = '0x7EF2e0048f5bAeDe046f6BF797943daF4ED8CB47'\n    const [rrorMessage, setErrorMessage] = useState(null);\n    const [defaultAccount, setDefaultAccount] = useState(null);\n    const [connButtonText, setconnButtonText] = useState('Connect wallet');\n\n    const [currentContraVal, setCurrentContraVal] = useState(null);\n    const [provider, setProvider] = useState(null);\n    const [signer, setSigner] = useState(null);\n    const [Contract,setContract] = useState(null);\n\n    const connectWalletHandler = () =>\n    {\n        if (window.ethereum)\n        {\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result => {\n                accountChangeHandler(result[0]);\n                setconnButtonText('wallet connected');\n            })\n        } else\n        {\n            setErrorMessage('Need to install Metamask');\n        }\n    }\n\n    const accountChangeHandler = (newAccount) => {\n        setDefaultAccount(newAccount);\n        updateEthers();\n    }\n\n    const updateEthers = () =>\n    {\n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(tempProvider);\n\n        let tempSigner = tempProvider.getSigner();\n        setSigner(tempSigner);\n        let tempContract = new ethers.Contract(constactAdress, SimpleStore_abi, tempSigner);\n        setContract(tempContract);\n\n    }\n    return (\n        <div>\n            <h3>{\"get/set Interaction with contract\"}</h3>\n            <button onClick={connectWalletHandler}>{connButtonText}</button>\n            <h3 className=\"Adress-color\">Address: {defaultAccount}</h3>\n            <button>get current value</button>\n            {ErrorMessage}\n        </div>\n    ) \n}\n\nexport default SimpleStore;"]},"metadata":{},"sourceType":"module"}